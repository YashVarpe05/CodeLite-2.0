import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import SiteNav from "@/components/SiteNav";
import LoaderCompleteListener from "@/components/LoaderCompleteListener";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

// Local KH Interference Trial font (Regular, Light, Bold)
const khInterference = localFont({
	src: [
		{
			path: "../KHInterferenceTRIAL-Light.woff2",
			weight: "300",
			style: "normal",
		},
		{
			path: "../KHInterferenceTRIAL-Regular.woff2",
			weight: "400",
			style: "normal",
		},
		{
			path: "../KHInterferenceTRIAL-Bold.woff2",
			weight: "700",
			style: "normal",
		},
	],
	variable: "--font-kh-interference",
	display: "swap",
});

export const metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default function RootLayout({ children }) {
	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} ${khInterference.variable} antialiased`}
			>
				{/* SiteNav contains only static markup; event listener moved to a client component */}
				<LoaderCompleteListener />
				<SiteNav />
				{children}
			</body>
		</html>
	);
}
